<html>
		<title>US Prosperity Index</title>
		<style type='text/css'>
		body { background: white;}
		
		#header
		{
			height:12%;
			text-align: center;
		}
		#Indeces
		{
			float: left;
			width: 99.6%;
			background: black;
			height: 10%;
			box-sizing: border-box;
			padding: .5em;
			text-align: center;
		}
		#IndexSpacing
		{
			float: left;
			width: 15%;
			background: white;
			height: 200%;
			box-sizing: border-box;
			padding: .5em;
		}
		#indexSpacing2
		{
			float: left;
			width: 10%;
			background: white;
			height: 200%;
			box-sizing: border-box;
			padding: .5em;
		}
		#Index1
		{
			float: left;
			width: 7%;
			background: white;
			height: 200%;
			box-sizing: border-box;
			padding: .5em;
			text-align: center;

		}
		#Index2
		{
			float: left;
			width: 7%;
			background: white;
			height: 200%;
			box-sizing: border-box;
			padding: .5em;
		}
		#Index3
		{
			float: left;
			width: 7%;
			background: white;
			height: 200%;
			box-sizing: border-box;
			padding: .5em;
		}
		#Index4
		{

			float: left;
			width: 7%;
			background: white;
			height: 200%;
			box-sizing: border-box;
			padding: .5em;
		}
		#Index5
		{

			float: left;
			width: 7%;
			background: white;
			height: 200%;
			box-sizing: border-box;
			padding: .5em;
		}
		#Index6
		{

			float: left;
			width: 7%;
			background: white;
			height: 200%;
			box-sizing: border-box;
			padding: .5em;
		}
		#Index7
		{

			float: left;
			width: 7%;
			background: white;
			height: 200%;
			box-sizing: border-box;
			padding: .5em;
		}
		#Index8
		{

			float: left;
			width: 7%;
			background: white;
			height: 200%;
			box-sizing: border-box;
			padding: .5em;
		}
		#Index9
		{

			float: left;
			width: 7%;
			background: white;
			height: 200%;
			box-sizing: border-box;
			padding: .5em;
		}
		#Index10
		{

			float: left;
			width: 7%;
			background: white;
			height: 200%;
			box-sizing: border-box;
			padding: .5em;
		}
		#ShowSelectedStates
		{
			text-align: center;
			float: left;
			width: 5%;
			background: white;
			height: 200%;
			text-align: center;
			box-sizing: border-box;
			padding: .5em;
		}
		#States 
		{
 		 float: left;
		 width: 15%;
		 background: white;
 		 height: 82%;
 		 overflow: auto;
 		 box-sizing: border-box;
 		 padding: 0.5em;
		}

		#right
		{
 		 float: right;
		 width: 83.5%;
		 background: white;
 		 height: 80%;
 		 overflow: auto;
 		 padding: 0em;
		}
		</style>
	</head>

<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
/* width */
::-webkit-scrollbar {
    width: 10px;
    overflow: auto;
}

/* Track */
::-webkit-scrollbar-track {
    box-shadow: inset 0 0 5px grey; 
    border-radius: 10px;
    overflow: auto;

}
 
/* Handle */
::-webkit-scrollbar-thumb {
    background: transparent; 
    border-radius: 10px;
    overflow: auto;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
    background: rgb(179, 179, 179); 
    overflow:auto;
}

</style>

	<body>
						<script type = "text/javascript">
					var happinessmultiplier = 1;
					var businessmultiplier = 1;
					var environmentmultiplier = 1;
					var infrastructuremultiplier = 1;
					var workmultiplier =1;

					function hmultup()
					{
						happinessmultiplier = happinessmultiplier+1;
						document.getElementById("happinessmultiplier").innerHTML = happinessmultiplier;
					}
					function hmultdown()
					{
						if(happinessmultiplier>1)
						{
						happinessmultiplier = happinessmultiplier-1;
						}
						document.getElementById("happinessmultiplier").innerHTML = happinessmultiplier;
					}
					function bmultup()
					{
						businessmultiplier = businessmultiplier+1;
						document.getElementById("businessmultiplier").innerHTML = businessmultiplier;
					}
					function bmultdown()
					{
						if(businessmultiplier>1)
						{
						businessmultiplier = businessmultiplier-1;
						}
						document.getElementById("businessmultiplier").innerHTML = businessmultiplier;
					}
					function emultup()
					{
						environmentmultiplier = environmentmultiplier+1;
						document.getElementById("environmentmultiplier").innerHTML = environmentmultiplier;
					}
					function emultdown()
					{
						if(environmentmultiplier>1)
						{
						environmentmultiplier = environmentmultiplier-1;
						}
						document.getElementById("environmentmultiplier").innerHTML = environmentmultiplier;
					}
					function imultup()
					{
						infrastructuremultiplier = infrastructuremultiplier+1;
						document.getElementById("infrastructuremultiplier").innerHTML = infrastructuremultiplier;
					}
					function imultdown()
					{
						if(infrastructuremultiplier>1)
						{
						infrastructuremultiplier = infrastructuremultiplier-1;
						}
						document.getElementById("infrastructuremultiplier").innerHTML = infrastructuremultiplier;
					}
					function workmultup()
					{
						workmultiplier = workmultiplier+1;
						document.getElementById("workmultiplier").innerHTML = workmultiplier;
					}
					function workmultdown()
					{
						if(workmultiplier>1)
						{
						workmultiplier = workmultiplier-1;
						}
						document.getElementById("workmultiplier").innerHTML = workmultiplier;
					}
				</script>
		<div id = "header">
			<font size= "50">
					&nbsp United States Prosperity Index
			</font>
		</div>
		<div id= "indeces">
			<div id= "IndexSpacing">
			</div>
			<div id= "ShowSelectedStates">
				&nbsp&nbsp&nbspState
			</div>
			<div id= "Index1">
				happiness 
				x<small id = "happinessmultiplier">1</small>
					<br />
				<button onclick = "hmultup()">up</button>
				<button onclick = "hmultdown()">down</button>
			</div>
			<div id= "Index2">
				Work x<small id = "workmultiplier">1</small><br />
				<button onclick = "workmultup()">up</button>
				<button onclick = "workmultdown()">down</button>
			</div>
			<div id= "Index3">
				Community<br /><br/>
				<button type= button> up </button>
				<button type= button> down </button>
			</div>
			<div id= "Index4">
				Health Care<br /><br/>
				<button type= button> up </button>
				<button type= button> down </button>
			</div>
			<div id= "Index5">
				Economy<br /><br/>
				<button type= button> up </button>
				<button type= button> down </button>
			</div>
			<div id= "Index6">
				Opportunity<br /><br/>
				<button type= button> up </button>
				<button type= button> down </button>
			</div>
			<div id= "Index7">
				Environment<br /><br/>
				<button type= button> up </button>
				<button type= button> down </button>
			</div>
			<div id= "Index8">
				Fiscal Stability<br />
				<button type= button> up </button>
				<button type= button> down </button>
			</div>
			<div id= "Index9">
				Infrastructure<br /><br/>
				<button type= button> up </button>
				<button type= button> down </button>
			</div>
			<div id= "Index10">
				Public Safety<br /><br/>
				<button type= button> up </button>
				<button type= button> down </button>
			</div>
			<div id= "IndexSpacing2">
			</div>
		</div>
		<div id= "content">
			<div id = "States">
				<button type= button> Select All </button><br />
				<button type= button> select </button> Alabama<br />
				<button type= button> select </button> Alaska<br />
				<button type= button> select </button> Arizona<br />
				<button type= button> select </button> Arkansas<br />
				<button type= button> select </button> California<br />
				<button type= button> select </button> Colorado<br />
				<button type= button> select </button> Connecticut<br />
				<button type= button> select </button> Delaware<br />
				<button type= button> select </button> Florida<br />
				<button type= button> select </button> Georgia
				<br /><button type= button> select </button> Hawaii
				<br /><button type= button> select </button> Idaho
				<br /><button type= button> select </button> Illinois
				<br /><button type= button> select </button> Indiana
				<br /><button type= button> select </button> Iowa
				<br /><button type= button> select </button> Kansas
				<br /><button type= button> select </button> Kentucky
				<br /><button type= button> select </button> Louisiana
				<br /><button type= button> select </button> Maine
				<br /><button type= button> select </button> Maryland
				<br /><button type= button> select </button> Massachusetts
				<br /><button type= button> select </button> Michigan
				<br /><button type= button> select </button> Minnesota
				<br /><button type= button> select </button> Mississippi
				<br /><button type= button> select </button> Missouri
				<br /><button type= button> select </button> Montana
				<br /><button type= button> select </button> Nebraska
				<br /><button type= button> select </button> Nevada
				<br /><button type= button> select </button> New Hampshire
				<br /><button type= button> select </button> New Jersey
				<br /><button type= button> select </button> New Mexico
				<br /><button type= button> select </button> New York
				<br /><button type= button> select </button> North Carolina
				<br /><button type= button> select </button> North Dakota
				<br /><button type= button> select </button> Ohio
				<br /><button type= button> select </button> Oklahoma
				<br /><button type= button> select </button> Oregon
				<br /><button type= button> select </button> Pennsylvania
				<br /><button type= button> select </button> Rhode Island
				<br /><button type= button> select </button> South Carolina
				<br /><button type= button> select </button> South Dakota
				<br /><button type= button> select </button> Tennessee
				<br /><button type= button> select </button> Texas
				<br /><button type= button> select </button> Utah
				<br /><button type= button> select </button> Vermont
				<br /><button type= button> select </button> Virginia
				<br /><button type= button> select </button> Washington
				<br /><button type= button> select </button> West Virginia
				<br /><button type= button> select </button> Wisonsin
				<br /><button type= button> select </button> Wyoming
			</div>
			<div id = "right">
				<script type="text/javascript">
					var max = 1000;
//create the hash
var hash = (string, max) => {
  var hash = 0;
  for (var i = 0; i < string.length; i++) {
    hash = hash + (string.charCodeAt(i)*string.charCodeAt(i));
  }
  return hash % max;
};

let HashTable = function() {
  let storage = [];
  const max = 1000;
  
  //currently prints all hash indexes that are defined
      //this function needs to be changed/have several versions to benefit us
  this.print = function() {
    for(var i = 0; i< max; i++)
    {
       if(storage[i]!=undefined)
       {
        document.write(storage[i]);
        document.write("<br>");
      }
    }
    
  }
//adds the state symbol and value to hash table
  this.add = function(key, happiness, work, community, HealthCare, economy, opportunity, environment, FiscalStability, infrastructure, publicSafety, rank, click)
  {
    var index = hash(key, max);
    if (storage[index] === undefined) {
      storage[index] = [
        [key, happiness, work, community, HealthCare, economy, opportunity, environment, FiscalStability, infrastructure, publicSafety, rank, click]
      ];
    } else {
      var inserted = false;
      for (var i = 0; i < storage[index].length; i++) {
        if (storage[index][i][0] === key) 
        {
          storage[index][i][1] = happiness;
          storage[index][i][2] = work;
          storage[index][i][3] = community;
          storage[index][i][4] = HealthCare;
          storage[index][i][5] = economy;
          storage[index][i][6] = opportunity;
          storage[index][i][7] = environment;
          storage[index][i][8] = FiscalStability;
          storage[index][i][9] = infrastructure;
          storage[index][i][10] = publicSafety;
          storage[index][i][11] = rank; 
          storage[index][i][12] = click;
          inserted = true;
        }
      }
      if (inserted === false) {
        storage[index].push([key, happiness , work , community , HealthCare , economy , opportunity , environment , FiscalStability , infrastructure , publicSafety, rank, click]);
      }
    }
  };
  this.remove = function(key) {
    var index = hash(key, max);
    if (storage[index].length === 1 && storage[index][0][0] === key) {
      delete storage[index];
    } else {
      for (var i = 0; i < storage[index].length; i++) {
        if (storage[index][i][0] === key) {
          delete storage[index][i];
        }
      }
    }
  };
//prints the stock symbol and the value
  this.printinfo = function(key)
  {
    var index = hash(key,max);
    if(storage[index]===undefined)
    {
    document.write("no symbol match");  
  }
    else
    {
      for(var i=0; i<storage[index].length; i++)
      {
        if (storage[index][i][0] === key)
        {
          document.write(storage[index][i][0]);
          document.write(" ");
          document.write(storage[index][i][1]);
          document.write(" ");
          document.write(storage[index][i][2]);
          document.write(" ");
          document.write(storage[index][i][3]);
          document.write(" ");
          document.write(storage[index][i][4]);
          document.write(" ");
          document.write(storage[index][i][5]);
          document.write(" ");
          document.write(storage[index][i][6]);
          document.write(" ");
          document.write(storage[index][i][7]);
          document.write(" ");
          document.write(storage[index][i][8]);
          document.write(" ");
          document.write(storage[index][i][9]);
          document.write(" ");
          document.write(storage[index][i][10]);
          document.write(" ");
          document.write(storage[index][i][11]);
          document.write(" ");
          document.write(storage[index][i][12]);
          document.write(" ");
        }
      }
    }
  }
  //returns happiness of 
  this.lookup = function(key) {
    var index = hash(key, max);
    if (storage[index] === undefined) {
      return undefined;
    } else {
      for (var i = 0; i < storage[index].length; i++) {
        if (storage[index][i][0] === key) {
          return storage[index][i][1];
        }
      }
    }
  };
  this.calculateRank = function()
  {
  	var happinessRank = 0; 
  	var workRank = 0;
  	var communityRank = 0;
  	var HealthCareRank = 0;
  	var economyRank = 0; 
  	var opportunityRank = 0;
  	var environmentRank = 0; 
  	var FiscalStabilityRank = 0;
  	var infrastructureRank = 0; 
  	var publicSafetyRank = 0;
  	for (var i = 0 ; i < max; i++)
  	{
  		//this for loop will search in the hash table for anything that is defined
  		if ( storage[i] != undefined)
  		{
  			for ( j = 0; j < storage[i].length; j++)
  			{
  				happinessRank = storage[i][j][1];
  				happinessRank =-happinessRank; 
  				happinessRank =-happinessRank;
  				workRank = storage[i][j][2];
  				workRank =-workRank;
  				workRank =-workRank;
  				communityRank = storage[i][j][3];
  				communityRank =-communityRank; 
  				communityRank =-communityRank;
  				HealthCareRank = storage[i][j][4];
  				HealthCareRank =-HealthCareRank;
  				HealthCareRank =-HealthCareRank;
  				economyRank = storage[i][j][5];
  				economyRank =-economyRank;
  				economyRank =-economyRank;
  				opportunityRank = storage[i][j][6];
  				opportunityRank =-opportunityRank;
  				opportunityRank =-opportunityRank; 
  				environmentRank = storage[i][j][7];
  				environmentRank =-environmentRank;
  				environmentRank =-environmentRank;
  				FiscalStabilityRank = storage[i][j][8];
  				FiscalStabilityRank =-FiscalStabilityRank;
  				FiscalStabilityRank =-FiscalStabilityRank;
  				infrastructureRank = storage[i][j][9];
  				infrastructureRank =-infrastructureRank;
  				infrastructureRank =-infrastructureRank;
  				publicSafetyRank = storage[i][j][10];
  				publicSafetyRank =-publicSafetyRank;
  				publicSafetyRank =-publicSafetyRank;
  				storage[i][j][11] = happinessRank + workRank + communityRank + HealthCareRank + economyRank + opportunityRank + environmentRank + FiscalStabilityRank + infrastructureRank + publicSafetyRank; //something
  			}
  		}
  	}
  };

};

let ht = new HashTable();

//ht.add("AL", " 0", " 1", " 2", " 3" , " 4", " 5", " 6", " 7", " 8", " 9", " 0");
ht.add("AL", " 41", " 43", " 42", " 46" , " 38", " 48", " 35", " 25", " 32", " 43", " 0", " 1");
ht.add("AK", " 23", " 49", " 50", " 28" ," 50", " 5", " 19", " 47", " 42", " 49", " 0", " 1");
ht.add("AZ", " 22", " 19", " 27", " 24", " 16", " 45", " 39", " 34", " 12", " 41", " 0", " 1");
ht.add("AR", " 50", " 28", " 35", " 49", " 40", " 41", " 7", " 20", " 46", " 47", " 0", " 1");
ht.add("CA", " 2", " 21", " 21", " 11"," 4", " 46", " 50", " 5", " 43", " 38", " 34", " 0", " 1"); //5
ht.add("CO", " 13", " 7", " 33", " 9" , " 1", " 28", " 10", " 31", " 14", " 27", " 0", " 1"); 
ht.add("CT", " 15", " 40", " 11", " 4", " 43", " 29", " 38", " 41", " 41", " 6", " 0", " 1"); 
ht.add("DE", " 30", " 25", " 40", " 25", " 10", " 7", " 24", " 15", " 18", " 40", " 0", " 1"); 
ht.add("FL", " 16", " 32", " 49", " 34", " 5", " 36", " 33", " 3", " 11", " 35", " 0", " 1");
ht.add("GA", " 27", " 24", " 36", " 42", " 14", " 33", " 32", " 13", " 17", " 37", " 0", " 1"); //10
ht.add("HI", " 1", " 10", " 19", " 1", " 23", " 18", " 31", " 35", " 27", " 29", " 0", " 1");
ht.add("ID", " 31", " 3", " 9", " 18", " 7", " 42", " 20", " 7", " 10", " 5", " 0", " 1");
ht.add("IL", " 7", " 39", " 24", " 27", " 39", " 22", " 47", " 50", " 13", " 25", " 0", " 1");
ht.add("IN", " 40", " 13", " 20", " 40", " 25", " 11", " 48" , " 8", " 30", " 32", " 0", " 1"); 
ht.add("IA", " 12", " 8", " 7", " 3", " 17", " 4", " 9", " 21", " 1", " 16", "0", " 1"); //15
ht.add("KS", " 21", " 34", " 34", " 30", " 42", " 12", " 16", " 46", " 16", " 30", " 0", " 1");
ht.add("KY", " 46", " 35", " 37", " 45", " 45", " 30", " 27", " 46", " 22", " 12", " 0", " 1");
ht.add("LA", " 43", " 50", " 48", " 47", " 44", " 50", " 42", " 48", " 44", " 48", " 0", " 1");
ht.add("ME", " 39", " 11", " 6", " 22", " 37", " 26", " 12" ," 29", " 43", " 1", " 0", " 1");
ht.add("MD", " 10", " 31", " 5", " 16", " 24", " 2", " 31" ," 23", " 25", " 33", " 0", " 1"); //20
ht.add("MA", " 20", " 12", " 16", " 5", " 9", " 14", " 25" ," 40", " 45", " 14", " 0", " 1");
ht.add("MI", " 36", " 18", " 18", " 32", " 22", " 20", " 29" ," 32", " 40", " 24", " 0", " 1");
ht.add("MN", " 5", " 5", " 3", " 7", " 20", " 3" ," 2", " 24", " 6", " 11", " 0", " 1");
ht.add("MS", " 42", " 46", " 47", " 50"," 48", " 49", " 6" ," 45", " 49", " 22", " 0", " 1");
ht.add("MO", " 41", " 26", " 44", " 39", " 33", " 21", " 15" ," 10", " 20", " 42", " 0", " 1"); //25
ht.add("MT", " 29", " 6", " 32", " 26", " 26", " 37", " 13" ," 12", " 34", " 28", " 0", " 1");
ht.add("NE", " 4", " 15", " 17", " 27", " 21", " 13", " 14" ," 11", " 9", " 18", " 0", " 1");
ht.add("NV", " 32", " 36", " 41", " 35", " 12", " 19", " 43" ," 38", " 5", " 45", " 0", " 1");
ht.add("NH", " 18", " 22", " 2", " 13", " 11", " 1", " 4" ," 26", " 37", " 3", " 0", " 1");
ht.add("NJ", " 3", " 41", " 8", " 12", " 41", " 10", " 49" ," 49", " 28", " 4", " 0", " 1"); //30
ht.add("NM", " 34", " 45", " 39", " 31", " 46", " 44", " 8" ," 44", " 47", " 50", " 0", " 1");
ht.add("NY", " 17", " 42", " 22", " 15", " 35", " 43", " 37" ," 28", " 19", " 13", " 0", " 1");
ht.add("NC", " 26", " 23", " 29", " 37", " 18", " 40", " 34" ," 6", " 24", " 31", " 0", " 1");
ht.add("ND", " 9", " 14", " 28", " 14", " 19", " 17", " 1" ," 2", " 2", " 17", " 0", " 1");
ht.add("OH", " 38", " 38", " 25", " 36", " 32", " 25", " 40" ," 37", " 23", " 21", " 0", " 1"); //35
ht.add("OK", " 48", " 44", " 43", " 48", " 36", " 38", " 17" ," 22", " 31", " 39", " 0", " 1");
ht.add("OR", " 44", " 2", " 23", " 20", " 6", " 32", " 18" ," 30", " 3", " 26", " 0", " 1");
ht.add("PA", " 28", " 37", " 14", " 23", " 34", " 16", " 44" , " 42", " 29", " 10", " 0", " 1");
ht.add("RI", " 35", " 27", " 26", " 8", " 29", " 34", " 23" ," 33", " 48", " 8", " 0", " 1");
ht.add("SC", " 33", " 30", " 45", " 41", " 15", " 39", " 30" ," 18", " 33", " 44", " 0", " 1"); //40
ht.add("SD", " 6", " 16", " 12", " 21", " 28", " 24", " 5" ," 4", " 7", " 20", " 0", " 1");
ht.add("TN", " 45", " 17", " 38", " 43", " 13", " 31", " 28" ," 5", " 15", " 46", " 0", " 1");
ht.add("TX", " 14", " 33", " 46", " 38", " 8", " 47", " 46" ," 17", " 21", " 36", " 0", " 1");
ht.add("UT", " 24", " 1", " 1", " 10"," 2", " 35", " 22" ," 1", " 8", " 23", " 0", " 1");
ht.add("VT", " 19", " 20", " 4", " 6", " 31", " 6", " 27" , " 16", " 35", " 2", " 0", " 1"); //45
ht.add("VA", " 8", " 29", " 13", " 29", " 30", " 9", " 41" , " 14", " 39", " 7", " 0", " 1");
ht.add("WA", " 25", " 4", " 15", " 2", " 3", " 27", " 21" , " 27", " 4", " 38", " 0", " 1");
ht.add("WV", " 49", " 48", " 31", " 44", " 49", " 23", " 45" , " 36", " 50", " 19", " 0", " 1");
ht.add("WI", " 11", " 9", " 10", " 17", " 27", " 8", " 3", " 19", " 26", " 15", " 0", " 1");
ht.add("WY", " 37", " 47", " 30", " 33", " 47", " 15", " 11" , " 9", " 36", " 9", " 0", " 1"); //50

//ht.print
        </script>

   
    
    

      <div id = "right">
        <script language="JavaScript">
                  
                  //prints whole hash
                  ht.calculateRank();
                  ht.print();
                  //prints just info of stock "KEY"
                 //ht.printinfo("KEY");
                  //document.write(ht.lookup("CA"));
				</script>
			</div>
		

	</body>
</html>
